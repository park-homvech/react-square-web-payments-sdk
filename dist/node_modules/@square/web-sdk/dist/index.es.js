var p = (r, e, t) => new Promise((n, a) => {
  var d = (o) => {
    try {
      i(t.next(o));
    } catch (s) {
      a(s);
    }
  }, l = (o) => {
    try {
      i(t.throw(o));
    } catch (s) {
      a(s);
    }
  }, i = (o) => o.done ? n(o.value) : Promise.resolve(o.value).then(d, l);
  i((t = t.apply(r, e)).next());
});
function w(r) {
  return document.querySelector(`script[src="${r}"]`);
}
function h(r) {
  let e = document.head || document.body;
  if (!e)
    throw new Error("Square.js requires a <body> or <head> element.");
  let t = document.createElement("script");
  return t.src = r, e.appendChild(t), t;
}
var u = null;
function m(r) {
  return u !== null || (u = new Promise((e, t) => {
    if (typeof window > "u") {
      e(null);
      return;
    }
    if (window.Square) {
      e(window.Square);
      return;
    }
    try {
      let n = w(r);
      n || (n = h(r)), n.addEventListener("load", () => {
        window.Square ? e(window.Square) : t(new Error("Square.js failed to load properly."));
      }), n.addEventListener("error", () => {
        t(new Error("Error occurred while loading Square.js"));
      });
    } catch (n) {
      t(n);
    }
  })), u;
}
var f = "v1", c = class extends Error {
  constructor(r = "The Payment 'applicationId' option is not in the correct format.") {
    super(r), this.name = "InvalidApplicationIdError", Object.setPrototypeOf(this, c.prototype);
  }
};
function q(r) {
  let e = "";
  if (r.startsWith("sq0idp-") && (e = "https://web.squarecdn.com/"), r.startsWith("sandbox-sq0idb-") && (e = "https://sandbox.web.squarecdn.com/"), e.length === 0)
    throw new c();
  return e += `${f}/square.js`, e;
}
function y(r, e, t) {
  return p(this, null, function* () {
    let n = t?.scriptSrc !== void 0 ? t.scriptSrc : q(r), a = yield m(n);
    return a === null ? null : a.payments(r, e);
  });
}
export {
  y as payments
};
//# sourceMappingURL=index.es.js.map
